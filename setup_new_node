Setting up new node
-------------------

sudo apt update & sudo apt upgrade
sudo apt install git python-pip

git clone https://github.com/openstack-dev/devstack

For cinder to use ceph backend
-------------------------------
ENABLE_CEPH_CINDER=True     # ceph backend for cinder
ENABLE_CEPH_GLANCE=True     # store images in ceph
ENABLE_CEPH_C_BAK=True      # backup volumes to ceph
ENABLE_CEPH_NOVA=True       # allow nova to use ceph resources
enable_plugin devstack-plugin-ceph git://git.openstack.org/openstack/devstack-plugin-ceph

create glance image
-------------------
https://computingforgeeks.com/adding-images-openstack-glance/

wget http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
openstack image create --container-format bare --disk-format qcow2 --file xenial-server-cloudimg-amd64-disk1.img Ubuntu-16.04-x86_64

Restart existing node
---------------------
if using lvm backend 
systemctl enable lvm2-lvmetad.service
systemctl enable lvm2-lvmetad.socket
systemctl start lvm2-lvmetad.service
systemctl start lvm2-lvmetad.socket

check br-ex ip address

New Volume attach 
-----------------
http://www.darwinbiler.com/openstack-creating-and-attaching-a-volume-into-an-instance/
https://iujetstream.atlassian.net/wiki/spaces/JWT/pages/41287747/Creating+and+using+volumes+from+the+command+line
mount -o noatime /dev/vdb1 /vol_b

setup VM for cloud provider openstack
-------------------------------------
update /etc/hosts to add 
127.0.1.1 vm2

sudo apt update & sudo apt upgrade

setup git

git config --global user.email "anusha.ramineni@india.nec.com"
git config --global user.name "Anusha Ramineni"
git clone https://github.com/ramineni/docs.git

curl -sSL https://get.docker.io | bash
sudo sed -i '/^ExecStart=\/usr\/bin\/dockerd$/ s/$/ --exec-opt native.cgroupdriver=systemd/' /lib/systemd/system/docker.service
sudo usermod -aG docker ubuntu
sudo systemctl daemon-reload
sudo systemctl enable docker
sudo systemctl start docker

sudo apt install -y -q git gcc etcd python-pip
sudo pip install Mercurial

curl -O https://storage.googleapis.com/golang/go1.11.2.linux-amd64.tar.gz
tar -xvf go1.11.2.linux-amd64.tar.gz
sudo mv go /usr/local

Install etcd
------------
curl -L https://github.com/coreos/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz -o etcd-v3.3.10-linux-amd64.tar.gz   
tar xzvf etcd-v3.3.10-linux-amd64.tar.gz 
cd etcd-v3.3.10-linux-amd64 
sudo cp etcd /usr/local/bin/ 
sudo cp etcdctl /usr/local/bin/ 

etcd --version

>>> download env_variables file

export GOROOT=/usr/local/go
export GOPATH=$HOME/vol1/go
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin  
export working_dir=$GOPATH/src/k8s.io
                               
mkdir -p $GOPATH/bin
cd $GOPATH/bin
curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh

mkdir -p $working_dir
cd $working_dir
git clone https://github.com/ramineni/cloud-provider-openstack
cd cloud-provider-openstack
git config credential.helper store
git remote add upstream https://github.com/kubernetes/cloud-provider-openstack
git remote add local https://github.com/ramineni/cpo
make build

cd $working_dir
export KUBE_FASTBUILD=true
git clone https://github.com/ramineni/kubernetes
cd kubernetes
make cross

mkdir -p /etc/kubernetes
vi /etc/kubernetes/cloud-config

[Global]
username=<username>
password=<password>
auth-url=http://<auth_endpoint>/v3
tenant-id=3a700fb8d1274b1fa1cd2831bb993212
domain-id=<domain_id>


update .bashrc
--------------
source $HOME/env_variables
alias wd='cd $GOPATH/src/k8s.io'
alias wdc='cd $GOPATH/src/k8s.io/cloud-provider-openstack'
alias wdk='cd $GOPATH/src/k8s.io/kubernetes'
alias kctl='kubectl.sh'
alias start='/home/ubuntu/docs/startup.sh'
alias clean='/home/ubuntu/docs/clean.sh'

check startup.sh

PR merged
is:pr author:ramineni org:kubernetes org:kubernetes-sigs is:merged

PR reviewed
reviewed-by:ramineni org:kubernetes -author:ramineni
is:pr commenter:ramineni -author:ramineni -reviewed-by:ramineni org:kubernetes
